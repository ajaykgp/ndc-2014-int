








                             So You Think You Can Int?



                               Anders Schau @Knatten


                            //// Outracks Technologies
                                   CppQuiz.org
                                 C++ on a Friday




                                                                               '
-------------------------------------------------------------------------------- 











                                      int










-------------------------------------------------------------------------------- 













                            What's an int?












-------------------------------------------------------------------------------- 


#include <iostream>
#include <limits>
using namespace std;

int main()
{
   cout << sizeof(int) << endl; 
}


-------------------------------------------------------------------------------- 


#include <iostream>
#include <limits>
using namespace std;

int main()
{
   cout << sizeof(signed char) << endl; 
   cout << sizeof(short int) << endl; 
   cout << sizeof(int) << endl; 
   cout << sizeof(long int) << endl; 
   cout << sizeof(long long int) << endl; 
}


-------------------------------------------------------------------------------- 


#include <iostream>
#include <limits>
using namespace std;

int main()
{
   cout << sizeof(unsigned char) << endl; 
   cout << sizeof(unsigned short int) << endl; 
   cout << sizeof(unsigned int) << endl; 
   cout << sizeof(unsigned long int) << endl; 
   cout << sizeof(unsigned long long int) << endl; 
}


-------------------------------------------------------------------------------- 


#include <iostream>
#include <typeinfo>
using namespace std;

int main()
{
   cout << boolalpha;
   cout << (typeid(int) == typeid(signed int)) << endl;
   cout << (typeid(int) == typeid(unsigned int)) << endl;
   cout << (typeid(char) == typeid(signed char)) << endl;
   cout << (typeid(char) == typeid(unsigned char)) << endl;
}


-------------------------------------------------------------------------------- 


#include <iostream>
#include <limits>
using namespace std;

int main()
{
   cout << sizeof(int) << endl; 
   cout << numeric_limits<int>::max() << endl;
   cout << numeric_limits<int>::min() << endl;
}


-------------------------------------------------------------------------------- 


#include <iostream>
#include <limits>
using namespace std;

int main()
{
   unsigned int i = numeric_limits<unsigned int>::max();
   cout << i << endl;
   i++;
   cout << i << endl;
}

     

-------------------------------------------------------------------------------- 

     
                         


                         1   1       
                         0 1 0 1       5
                     +   1 1 0 1      13
                     = 1 0 0 1 0         















-------------------------------------------------------------------------------- 

#include <iostream>
#include <limits>
using namespace std;

int main()
{
    int i = numeric_limits<int>::max();
    cout << i << endl;
    i++;
    cout << i << endl;
}




-------------------------------------------------------------------------------- 


                          Two's complement

                             bin    dec
                            0 0 0    0
                            0 0 1    1
                            0 1 0    2 
                            0 1 1    3 
                            1 0 0   -4
                            1 0 1   -3
                            1 1 0   -2
                            1 1 1   -1







-------------------------------------------------------------------------------- 


#include <iostream>
#include <limits>
using namespace std;

int main()
{
    int i;
    cout << i;
}


-------------------------------------------------------------------------------- 


#include <iostream>
#include <limits>
using namespace std;

void f()
{
    int i;
    cout << i;
    i = 2;
}

int main()
{
    f();
    f();
}


-------------------------------------------------------------------------------- 


#include <iostream>
#include <limits>
using namespace std;

void f()
{
    static int i;
    cout << i;
    i = 2;
}

int main()
{
    f();
    f();
}
-------------------------------------------------------------------------------- 
#include <iostream>
#include <limits>
using namespace std;

void f()
{
    int i;
    cout << i;
    i = 2;
}

void g()
{
    static int j = 3;
}

int main()
{
    f();
    g();
    f();
}


-------------------------------------------------------------------------------- 


int a;
static int b;

class Ohlson
{
    int c;
    static int d;
};

void x()
{
    int e;
    static int f;
    b = 0;
}

int main(){}


-------------------------------------------------------------------------------- 


#include <iostream>
using namespace std;

int main() {
    cout << 1["ABC"];
    // ยง5.2.1: "The expression E1[E2] is identical (by definition) to
    // *((E1)+(E2))"
    cout << *((1)+("ABC"));
    // operator + is commutative
    cout << *(("ABC") + (1));
    // ยง5.2.1
    cout << "ABC"[1];
}


-------------------------------------------------------------------------------- 


#include <iostream>
#include <typeinfo>
using namespace std;

void f(const char a[])
{
    cout << typeid(a).name() <<endl;
}
int main() {
    cout << 1["ABC"] << endl;
    cout << *(1 + (const char*)"ABC") << endl;
    cout << typeid("ABC").name() <<endl;
    auto abc = "ABC";
    cout << typeid(abc).name() <<endl;
    const char abc2[] = "ABC";
    cout << typeid(abc2).name() <<endl;
    f(abc);

}



-------------------------------------------------------------------------------- 






         * Why make this talk?

         * I like technical talks!
         * Nice to know the language better
         * Trying != correct answer
         * Everything is in the standard (it gets better)
         * http://cppquiz.org
         * http://accu.org
         * http://ocppug.org







                                                                               '
